# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Musest.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sqlite3
import sys
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QMessageBox

DB = "mus_db.db"


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(749, 498)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget.sizePolicy().hasHeightForWidth())
        self.centralwidget.setSizePolicy(sizePolicy)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.centralwidget2 = QtWidgets.QWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.centralwidget2.sizePolicy().hasHeightForWidth())
        self.centralwidget2.setSizePolicy(sizePolicy)
        self.centralwidget2.setObjectName("centralwidget2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.centralwidget2)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.title1 = QtWidgets.QLabel(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.title1.sizePolicy().hasHeightForWidth())
        self.title1.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.title1.setFont(font)
        self.title1.setAutoFillBackground(False)
        self.title1.setAlignment(QtCore.Qt.AlignCenter)
        self.title1.setOpenExternalLinks(False)
        self.title1.setObjectName("title1")
        self.verticalLayout_6.addWidget(self.title1)
        self.LayoutAdd1 = QtWidgets.QWidget(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LayoutAdd1.sizePolicy().hasHeightForWidth())
        self.LayoutAdd1.setSizePolicy(sizePolicy)
        self.LayoutAdd1.setObjectName("LayoutAdd1")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.LayoutAdd1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.textAdd = QtWidgets.QLabel(self.LayoutAdd1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Maximum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textAdd.sizePolicy().hasHeightForWidth())
        self.textAdd.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.textAdd.setFont(font)
        self.textAdd.setObjectName("textAdd")
        self.horizontalLayout_2.addWidget(self.textAdd)
        self.buttonAdd = QtWidgets.QPushButton(self.LayoutAdd1)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonAdd.sizePolicy().hasHeightForWidth())
        self.buttonAdd.setSizePolicy(sizePolicy)
        self.buttonAdd.setMinimumSize(QtCore.QSize(75, 25))
        self.buttonAdd.setObjectName("buttonAdd")
        self.horizontalLayout_2.addWidget(self.buttonAdd)
        self.verticalLayout_6.addWidget(self.LayoutAdd1)
        self.LayoutAdd2 = QtWidgets.QWidget(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.LayoutAdd2.sizePolicy().hasHeightForWidth())
        self.LayoutAdd2.setSizePolicy(sizePolicy)
        self.LayoutAdd2.setObjectName("LayoutAdd2")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.LayoutAdd2)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.verticalLayoutAdd1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutAdd1.setObjectName("verticalLayoutAdd1")
        self.textName1 = QtWidgets.QLabel(self.LayoutAdd2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textName1.sizePolicy().hasHeightForWidth())
        self.textName1.setSizePolicy(sizePolicy)
        self.textName1.setObjectName("textName1")
        self.verticalLayoutAdd1.addWidget(self.textName1)
        self.add1_lineEdit = QtWidgets.QLineEdit(self.LayoutAdd2)
        self.add1_lineEdit.setObjectName("add1_lineEdit")
        self.verticalLayoutAdd1.addWidget(self.add1_lineEdit)
        self.horizontalLayout.addLayout(self.verticalLayoutAdd1)
        self.verticalLayoutAdd2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutAdd2.setObjectName("verticalLayoutAdd2")
        self.textName2 = QtWidgets.QLabel(self.LayoutAdd2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textName2.sizePolicy().hasHeightForWidth())
        self.textName2.setSizePolicy(sizePolicy)
        self.textName2.setObjectName("textName2")
        self.verticalLayoutAdd2.addWidget(self.textName2)
        self.add2_lineEdit = QtWidgets.QLineEdit(self.LayoutAdd2)
        self.add2_lineEdit.setObjectName("add2_lineEdit")
        self.verticalLayoutAdd2.addWidget(self.add2_lineEdit)
        self.horizontalLayout.addLayout(self.verticalLayoutAdd2)
        self.verticalLayoutAdd3 = QtWidgets.QVBoxLayout()
        self.verticalLayoutAdd3.setObjectName("verticalLayoutAdd3")
        self.textName3 = QtWidgets.QLabel(self.LayoutAdd2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textName3.sizePolicy().hasHeightForWidth())
        self.textName3.setSizePolicy(sizePolicy)
        self.textName3.setObjectName("textName3")
        self.verticalLayoutAdd3.addWidget(self.textName3)
        self.add3_spinBox = QtWidgets.QSpinBox(self.LayoutAdd2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add3_spinBox.sizePolicy().hasHeightForWidth())
        self.add3_spinBox.setSizePolicy(sizePolicy)
        self.add3_spinBox.setMaximum(99)
        self.add3_spinBox.setObjectName("add3_spinBox")
        self.verticalLayoutAdd3.addWidget(self.add3_spinBox)
        self.horizontalLayout.addLayout(self.verticalLayoutAdd3)
        self.verticalLayoutAdd4 = QtWidgets.QVBoxLayout()
        self.verticalLayoutAdd4.setObjectName("verticalLayoutAdd4")
        self.textName4 = QtWidgets.QLabel(self.LayoutAdd2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textName4.sizePolicy().hasHeightForWidth())
        self.textName4.setSizePolicy(sizePolicy)
        self.textName4.setObjectName("textName4")
        self.verticalLayoutAdd4.addWidget(self.textName4)
        self.add4_lineEdit = QtWidgets.QLineEdit(self.LayoutAdd2)
        self.add4_lineEdit.setObjectName("add4_lineEdit")
        self.verticalLayoutAdd4.addWidget(self.add4_lineEdit)
        self.horizontalLayout.addLayout(self.verticalLayoutAdd4)
        self.verticalLayoutAdd5 = QtWidgets.QVBoxLayout()
        self.verticalLayoutAdd5.setObjectName("verticalLayoutAdd5")
        self.textName5 = QtWidgets.QLabel(self.LayoutAdd2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.textName5.sizePolicy().hasHeightForWidth())
        self.textName5.setSizePolicy(sizePolicy)
        self.textName5.setObjectName("textName5")
        self.verticalLayoutAdd5.addWidget(self.textName5)
        self.add5_comboBox = QtWidgets.QComboBox(self.LayoutAdd2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add5_comboBox.sizePolicy().hasHeightForWidth())
        self.add5_comboBox.setSizePolicy(sizePolicy)
        self.add5_comboBox.setObjectName("add5_comboBox")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.add5_comboBox.addItem("")
        self.verticalLayoutAdd5.addWidget(self.add5_comboBox)
        self.horizontalLayout.addLayout(self.verticalLayoutAdd5)
        self.verticalLayout_6.addWidget(self.LayoutAdd2)
        self.title2 = QtWidgets.QLabel(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.title2.sizePolicy().hasHeightForWidth())
        self.title2.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.title2.setFont(font)
        self.title2.setAutoFillBackground(False)
        self.title2.setAlignment(QtCore.Qt.AlignCenter)
        self.title2.setOpenExternalLinks(False)
        self.title2.setObjectName("title2")
        self.verticalLayout_6.addWidget(self.title2)
        self.title3 = QtWidgets.QLabel(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.title3.sizePolicy().hasHeightForWidth())
        self.title3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Sitka Subheading")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.title3.setFont(font)
        self.title3.setAutoFillBackground(False)
        self.title3.setAlignment(QtCore.Qt.AlignCenter)
        self.title3.setOpenExternalLinks(False)
        self.title3.setObjectName("title3")
        self.verticalLayout_6.addWidget(self.title3)
        self.LayoutGet1 = QtWidgets.QHBoxLayout()
        self.LayoutGet1.setObjectName("LayoutGet1")
        self.buttonGet1 = QtWidgets.QPushButton(self.centralwidget2)
        self.buttonGet1.setObjectName("buttonGet1")
        self.LayoutGet1.addWidget(self.buttonGet1)
        self.buttonGet2 = QtWidgets.QPushButton(self.centralwidget2)
        self.buttonGet2.setObjectName("buttonGet2")
        self.LayoutGet1.addWidget(self.buttonGet2)
        self.buttonGet3 = QtWidgets.QPushButton(self.centralwidget2)
        self.buttonGet3.setObjectName("buttonGet3")
        self.LayoutGet1.addWidget(self.buttonGet3)
        self.buttonGet4 = QtWidgets.QPushButton(self.centralwidget2)
        self.buttonGet4.setObjectName("buttonGet4")
        self.LayoutGet1.addWidget(self.buttonGet4)
        self.verticalLayout_6.addLayout(self.LayoutGet1)
        self.title4 = QtWidgets.QLabel(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.title4.sizePolicy().hasHeightForWidth())
        self.title4.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Sitka Subheading")
        font.setPointSize(16)
        font.setBold(True)
        font.setItalic(True)
        font.setWeight(75)
        self.title4.setFont(font)
        self.title4.setAutoFillBackground(False)
        self.title4.setAlignment(QtCore.Qt.AlignCenter)
        self.title4.setOpenExternalLinks(False)
        self.title4.setObjectName("title4")
        self.verticalLayout_6.addWidget(self.title4)
        self.LayoutGet2 = QtWidgets.QHBoxLayout()
        self.LayoutGet2.setObjectName("LayoutGet2")
        self.verticalLayoutGet1 = QtWidgets.QVBoxLayout()
        self.verticalLayoutGet1.setObjectName("verticalLayoutGet1")
        self.buttonGet5 = QtWidgets.QPushButton(self.centralwidget2)
        self.buttonGet5.setObjectName("buttonGet5")
        self.verticalLayoutGet1.addWidget(self.buttonGet5)
        self.comboBoxGet1 = QtWidgets.QComboBox(self.centralwidget2)
        self.comboBoxGet1.setObjectName("comboBoxGet1")
        self.verticalLayoutGet1.addWidget(self.comboBoxGet1)
        self.LayoutGet2.addLayout(self.verticalLayoutGet1)
        self.verticalLayoutGet2 = QtWidgets.QVBoxLayout()
        self.verticalLayoutGet2.setObjectName("verticalLayoutGet2")
        self.buttonGet6 = QtWidgets.QPushButton(self.centralwidget2)
        self.buttonGet6.setObjectName("buttonGet6")
        self.verticalLayoutGet2.addWidget(self.buttonGet6)
        self.comboBoxGet2 = QtWidgets.QComboBox(self.centralwidget2)
        self.comboBoxGet2.setObjectName("comboBoxGet2")
        self.verticalLayoutGet2.addWidget(self.comboBoxGet2)
        self.LayoutGet2.addLayout(self.verticalLayoutGet2)
        self.verticalLayoutGet3 = QtWidgets.QVBoxLayout()
        self.verticalLayoutGet3.setObjectName("verticalLayoutGet3")
        self.buttonGet7 = QtWidgets.QPushButton(self.centralwidget2)
        self.buttonGet7.setObjectName("buttonGet7")
        self.verticalLayoutGet3.addWidget(self.buttonGet7)
        self.comboBoxGet3 = QtWidgets.QComboBox(self.centralwidget2)
        self.comboBoxGet3.setObjectName("comboBoxGet3")
        self.verticalLayoutGet3.addWidget(self.comboBoxGet3)
        self.LayoutGet2.addLayout(self.verticalLayoutGet3)
        self.verticalLayout_6.addLayout(self.LayoutGet2)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout_6.addItem(spacerItem)
        self.indent = QtWidgets.QLabel(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.indent.sizePolicy().hasHeightForWidth())
        self.indent.setSizePolicy(sizePolicy)
        self.indent.setText("")
        self.indent.setObjectName("indent")
        self.verticalLayout_6.addWidget(self.indent)
        self.label_3 = QtWidgets.QLabel(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_6.addWidget(self.label_3)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_2.sizePolicy().hasHeightForWidth())
        self.label_2.setSizePolicy(sizePolicy)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.comboBoxDel1 = QtWidgets.QComboBox(self.centralwidget2)
        self.comboBoxDel1.setObjectName("comboBoxDel1")
        self.verticalLayout_2.addWidget(self.comboBoxDel1)
        self.horizontalLayout_3.addLayout(self.verticalLayout_2)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.comboBoxDel2 = QtWidgets.QComboBox(self.centralwidget2)
        self.comboBoxDel2.setObjectName("comboBoxDel2")
        self.verticalLayout.addWidget(self.comboBoxDel2)
        self.horizontalLayout_3.addLayout(self.verticalLayout)
        self.buttonDel = QtWidgets.QPushButton(self.centralwidget2)
        self.buttonDel.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buttonDel.sizePolicy().hasHeightForWidth())
        self.buttonDel.setSizePolicy(sizePolicy)
        self.buttonDel.setMinimumSize(QtCore.QSize(0, 60))
        self.buttonDel.setStyleSheet("")
        self.buttonDel.setObjectName("buttonDel")
        self.horizontalLayout_3.addWidget(self.buttonDel)
        self.verticalLayout_6.addLayout(self.horizontalLayout_3)
        self.gridLayout.addWidget(self.centralwidget2, 0, 1, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 749, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MUSEST"))
        self.title1.setText(_translate("MainWindow", "ДОБАВЛЕНИЕ"))
        self.textAdd.setText(_translate("MainWindow",
                    "Заполните поля(со знаком \"*\" - обязательно) и нажмите на кнопку, чтобы добавить новую песню"))
        self.buttonAdd.setText(_translate("MainWindow", "Добавить"))
        self.textName1.setText(_translate("MainWindow", "Исполнитель*"))
        self.textName2.setText(_translate("MainWindow", "Песня*"))
        self.textName3.setText(_translate("MainWindow", "Оценка*"))
        self.textName4.setText(_translate("MainWindow", "Альбом"))
        self.textName5.setText(_translate("MainWindow", "Жанр"))
        self.add5_comboBox.setItemText(0, _translate("MainWindow", "-"))
        self.add5_comboBox.setItemText(1, _translate("MainWindow", "блюз"))
        self.add5_comboBox.setItemText(2, _translate("MainWindow", "джаз"))
        self.add5_comboBox.setItemText(3, _translate("MainWindow", "кантри"))
        self.add5_comboBox.setItemText(4, _translate("MainWindow", "классическая"))
        self.add5_comboBox.setItemText(5, _translate("MainWindow", "метал"))
        self.add5_comboBox.setItemText(6, _translate("MainWindow", "панк"))
        self.add5_comboBox.setItemText(7, _translate("MainWindow", "поп"))
        self.add5_comboBox.setItemText(8, _translate("MainWindow", "регги"))
        self.add5_comboBox.setItemText(9, _translate("MainWindow", "рок"))
        self.add5_comboBox.setItemText(10, _translate("MainWindow", "рэп"))
        self.add5_comboBox.setItemText(11, _translate("MainWindow", "хип-хоп"))
        self.add5_comboBox.setItemText(12, _translate("MainWindow", "шансон"))
        self.add5_comboBox.setItemText(13, _translate("MainWindow", "R&B"))
        self.title2.setText(_translate("MainWindow", "ПОЛУЧЕНИЕ ИНФОРМАЦИИ"))
        self.title3.setText(_translate("MainWindow", "ТОП"))
        self.buttonGet1.setText(_translate("MainWindow", "ПЕСЕН"))
        self.buttonGet2.setText(_translate("MainWindow", "ИСПОЛНИТЕЛЕЙ"))
        self.buttonGet3.setText(_translate("MainWindow", "АЛЬБОМОВ"))
        self.buttonGet4.setText(_translate("MainWindow", "ЖАНРОВ"))
        self.title4.setText(_translate("MainWindow", "ТОП ПЕСЕН ОДНОГО"))
        self.buttonGet5.setText(_translate("MainWindow", "ИСПОНИТЕЛЯ"))
        self.buttonGet6.setText(_translate("MainWindow", "АЛЬБОМА"))
        self.buttonGet7.setText(_translate("MainWindow", "ЖАНРА"))
        self.label_3.setText(_translate("MainWindow", "Выберите песню для удаления"))
        self.label_2.setText(_translate("MainWindow", "Исполнитель"))
        self.label.setText(_translate("MainWindow", "Песня"))
        self.buttonDel.setText(_translate("MainWindow", "Удалить песню"))


class Ui_Window2(object):
    def setupUi(self, Window2, parameter):
        Window2.setObjectName("Window2")
        Window2.resize(1024, 614)
        self.centralwidget = QtWidgets.QWidget(Window2)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.verticalLayout_2.addWidget(self.tableWidget)
        Window2.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Window2)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 679, 21))
        self.menubar.setObjectName("menubar")
        Window2.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Window2)
        self.statusbar.setObjectName("statusbar")
        Window2.setStatusBar(self.statusbar)

        self.retranslateUi(Window2, parameter)
        QtCore.QMetaObject.connectSlotsByName(Window2)

    def retranslateUi(self, Window2, parameter):
        if parameter == 1:
            _translate = QtCore.QCoreApplication.translate
            Window2.setWindowTitle(_translate("Window2", "Window2"))
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("Window2", "Исполнитель"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("Window2", "Песня"))
            item = self.tableWidget.horizontalHeaderItem(2)
            item.setText(_translate("Window2", "Оценка"))
            item = self.tableWidget.horizontalHeaderItem(3)
            item.setText(_translate("Window2", "Альбом"))
            item = self.tableWidget.horizontalHeaderItem(4)
            item.setText(_translate("Window2", "Жанр"))

        if parameter == 2:
            _translate = QtCore.QCoreApplication.translate
            Window2.setWindowTitle(_translate("Window2", "Window2"))
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("Window2", "Исполнитель"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("Window2", "Оценка"))

        if parameter == 3:
            _translate = QtCore.QCoreApplication.translate
            Window2.setWindowTitle(_translate("Window2", "Window2"))
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("Window2", "Исполнитель"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("Window2", "Альбом"))
            item = self.tableWidget.horizontalHeaderItem(2)
            item.setText(_translate("Window2", "Оценка"))

        if parameter == 4:
            _translate = QtCore.QCoreApplication.translate
            Window2.setWindowTitle(_translate("Window2", "Window2"))
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("Window2", "Жанр"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("Window2", "Оценка"))

        if parameter == 5:
            _translate = QtCore.QCoreApplication.translate
            Window2.setWindowTitle(_translate("Window2", "Window2"))
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("Window2", "Исполнитель"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("Window2", "Песня"))
            item = self.tableWidget.horizontalHeaderItem(2)
            item.setText(_translate("Window2", "Оценка"))
            item = self.tableWidget.horizontalHeaderItem(3)
            item.setText(_translate("Window2", "Альбом"))
            item = self.tableWidget.horizontalHeaderItem(4)
            item.setText(_translate("Window2", "Жанр"))

        if parameter == 6:
            _translate = QtCore.QCoreApplication.translate
            Window2.setWindowTitle(_translate("Window2", "Window2"))
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("Window2", "Исполнитель"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("Window2", "Песня"))
            item = self.tableWidget.horizontalHeaderItem(2)
            item.setText(_translate("Window2", "Оценка"))
            item = self.tableWidget.horizontalHeaderItem(3)
            item.setText(_translate("Window2", "Альбом"))
            item = self.tableWidget.horizontalHeaderItem(4)
            item.setText(_translate("Window2", "Жанр"))

        if parameter == 7:
            _translate = QtCore.QCoreApplication.translate
            Window2.setWindowTitle(_translate("Window2", "Window2"))
            item = self.tableWidget.horizontalHeaderItem(0)
            item.setText(_translate("Window2", "Исполнитель"))
            item = self.tableWidget.horizontalHeaderItem(1)
            item.setText(_translate("Window2", "Песня"))
            item = self.tableWidget.horizontalHeaderItem(2)
            item.setText(_translate("Window2", "Оценка"))
            item = self.tableWidget.horizontalHeaderItem(3)
            item.setText(_translate("Window2", "Альбом"))
            item = self.tableWidget.horizontalHeaderItem(4)
            item.setText(_translate("Window2", "Жанр"))


class Window2(QMainWindow, Ui_Window2):
    def __init__(self, parameter, text=None, parent=None):
        super(Window2, self).__init__(parent)
        self.setupUi(self, parameter)

        if parameter == 1:
            self.setWindowTitle('Топ песен')
            connection = sqlite3.connect(DB)
            cur = connection.cursor()
            result = cur.execute("""SELECT * FROM music""").fetchall()
            self.tableWidget.setRowCount(len(result))
            tablerow = 0
            for row in cur.execute("SELECT * FROM music ORDER BY Оценка DESC"):
                self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(row[0]))
                self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(row[1]))
                self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(row[2]))
                self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(row[3]))
                self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
                tablerow += 1

        if parameter == 2:
            self.setWindowTitle('Топ исполнителей')
            connection = sqlite3.connect(DB)
            cur = connection.cursor()
            result = cur.execute("""SELECT Исполнитель, AVG(Оценка) FROM music GROUP BY Исполнитель
                                    ORDER BY AVG(Оценка) DESC""").fetchall()
            self.tableWidget.setRowCount(len(result))
            tablerow = 0
            for row in cur.execute("""SELECT Исполнитель, AVG(Оценка) FROM music GROUP BY Исполнитель
                                      ORDER BY AVG(Оценка) DESC"""):
                self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(row[0]))
                self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])[:4]))
                tablerow += 1

        if parameter == 3:
            self.setWindowTitle('Топ альбомов')
            connection = sqlite3.connect(DB)
            cur = connection.cursor()
            result = cur.execute("""SELECT Исполнитель, Альбом, AVG(Оценка) FROM music
                                    WHERE (SELECT LENGTH(Альбом)) > 1 GROUP BY Альбом
                                    ORDER BY AVG(Оценка) DESC""").fetchall()
            self.tableWidget.setRowCount(len(result))
            tablerow = 0
            for row in cur.execute("""SELECT Исполнитель, Альбом, AVG(Оценка) FROM music
                                      WHERE (SELECT LENGTH(Альбом)) > 1 GROUP BY Альбом ORDER BY AVG(Оценка) DESC"""):
                self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(row[0]))
                self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(row[1]))
                self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(str(row[2])[:4]))
                tablerow += 1

        if parameter == 4:
            self.setWindowTitle('Топ жанров')
            connection = sqlite3.connect(DB)
            cur = connection.cursor()
            result = cur.execute("""SELECT Жанр, AVG(Оценка) FROM music WHERE (SELECT LENGTH(Жанр)) > 1
                                    GROUP BY Жанр ORDER BY AVG(Оценка) DESC""").fetchall()
            self.tableWidget.setRowCount(len(result))
            tablerow = 0
            for row in cur.execute("""SELECT Жанр, AVG(Оценка) FROM music WHERE (SELECT LENGTH(Жанр)) > 1
                                      GROUP BY Жанр ORDER BY AVG(Оценка) DESC"""):
                self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(row[0]))
                self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(str(row[1])[:4]))
                tablerow += 1

        if parameter == 5:
            self.setWindowTitle(f'Топ песен исполнителя {text}')
            connection = sqlite3.connect(DB)
            cur = connection.cursor()
            result = cur.execute(f"""SELECT * FROM music WHERE Исполнитель LIKE '{text}' 
                                     ORDER BY Оценка DESC""").fetchall()
            self.tableWidget.setRowCount(len(result))
            tablerow = 0
            for row in cur.execute(f"SELECT * FROM music WHERE Исполнитель LIKE '{text}' ORDER BY Оценка DESC"):
                self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(row[0]))
                self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(row[1]))
                self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(row[2]))
                self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(row[3]))
                self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
                tablerow += 1

        if parameter == 6:
            self.setWindowTitle(f'Топ песен из альбома {text}')
            connection = sqlite3.connect(DB)
            cur = connection.cursor()
            result = cur.execute(f"SELECT * FROM music WHERE Альбом LIKE '{text}' ORDER BY Оценка DESC").fetchall()
            self.tableWidget.setRowCount(len(result))
            tablerow = 0
            for row in cur.execute(f"SELECT * FROM music WHERE Альбом LIKE '{text}' ORDER BY Оценка DESC"):
                self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(row[0]))
                self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(row[1]))
                self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(row[2]))
                self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(row[3]))
                self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
                tablerow += 1

        if parameter == 7:
            self.setWindowTitle(f'Топ песен в жанре {text}')
            connection = sqlite3.connect(DB)
            cur = connection.cursor()
            result = cur.execute(f"SELECT * FROM music WHERE Жанр LIKE '{text}' ORDER BY Оценка DESC").fetchall()
            self.tableWidget.setRowCount(len(result))
            tablerow = 0
            for row in cur.execute(f"SELECT * FROM music WHERE Жанр LIKE '{text}' ORDER BY Оценка DESC"):
                self.tableWidget.setItem(tablerow, 0, QtWidgets.QTableWidgetItem(row[0]))
                self.tableWidget.setItem(tablerow, 1, QtWidgets.QTableWidgetItem(row[1]))
                self.tableWidget.setItem(tablerow, 2, QtWidgets.QTableWidgetItem(row[2]))
                self.tableWidget.setItem(tablerow, 3, QtWidgets.QTableWidgetItem(row[3]))
                self.tableWidget.setItem(tablerow, 4, QtWidgets.QTableWidgetItem(row[4]))
                tablerow += 1


class MyWidget(QMainWindow, Ui_MainWindow):
    def __init__(self):
        super(MyWidget, self).__init__()
        self.setupUi(self)
        self.setWindowTitle('MUSEST')
        connection = sqlite3.connect(DB)
        cur = connection.cursor()

        self.comboBoxDel1.clear()
        self.comboBoxDel2.clear()
        self.comboBoxGet1.clear()
        self.comboBoxGet2.clear()
        self.comboBoxGet3.clear()
        result = cur.execute("""SELECT DISTINCT Исполнитель FROM music""").fetchall()
        for elem in result:
            self.comboBoxGet1.addItem(elem[0])
        result = cur.execute("""SELECT DISTINCT Альбом FROM music""").fetchall()
        for elem in result:
            if elem[0] != None:
                self.comboBoxGet2.addItem(elem[0])
        result = cur.execute("""SELECT DISTINCT Жанр FROM music""").fetchall()
        for elem in result:
            if elem[0] != None:
                self.comboBoxGet3.addItem(elem[0])
        result = cur.execute("""SELECT DISTINCT Исполнитель FROM music""").fetchall()
        for elem in result:
            if elem[0] != None:
                self.comboBoxDel1.addItem(elem[0])
        result = cur.execute(f"""SELECT Песня FROM music WHERE Исполнитель LIKE '{self.comboBoxDel1.currentText()}'
                                 ORDER BY Оценка DESC""").fetchall()
        for elem in result:
            if elem[0] != None:
                self.comboBoxDel2.addItem(elem[0])

        self.buttonAdd.clicked.connect(self.Song_Add)
        self.buttonGet1.clicked.connect(self.show_window_2_Get1)
        self.buttonGet2.clicked.connect(self.show_window_2_Get2)
        self.buttonGet3.clicked.connect(self.show_window_2_Get3)
        self.buttonGet4.clicked.connect(self.show_window_2_Get4)
        self.buttonGet5.clicked.connect(self.show_window_2_Get5)
        self.buttonGet6.clicked.connect(self.show_window_2_Get6)
        self.buttonGet7.clicked.connect(self.show_window_2_Get7)
        self.buttonDel.clicked.connect(self.Song_Del)
        self.comboBoxDel1.currentTextChanged.connect(self.changeComboBox)

    def changeComboBox(self):
        connection = sqlite3.connect(DB)
        cur = connection.cursor()
        self.comboBoxDel2.clear()
        result = cur.execute(f"""SELECT Песня FROM music WHERE Исполнитель LIKE '{self.comboBoxDel1.currentText()}'
                                 ORDER BY Оценка DESC""").fetchall()
        for elem in result:
            if elem[0] != None:
                self.comboBoxDel2.addItem(elem[0])

    def show_window_2_Get1(self):
        self.w2 = Window2(1)
        self.w2.show()

    def show_window_2_Get2(self):
        self.w2 = Window2(2)
        self.w2.show()

    def show_window_2_Get3(self):
        self.w2 = Window2(3)
        self.w2.show()

    def show_window_2_Get4(self):
        self.w2 = Window2(4)
        self.w2.show()

    def show_window_2_Get5(self):
        self.w2 = Window2(5, self.comboBoxGet1.currentText())
        self.w2.show()

    def show_window_2_Get6(self):
        self.w2 = Window2(6, self.comboBoxGet2.currentText())
        self.w2.show()

    def show_window_2_Get7(self):
        self.w2 = Window2(7, self.comboBoxGet3.currentText())
        self.w2.show()

    def Song_Del(self):
        connection = sqlite3.connect(DB)
        cur = connection.cursor()

        result = cur.execute("""SELECT * FROM music""").fetchall()
        if len(result) > 0:
            question = QMessageBox.question(self, "Предупреждение", "Вы действительно хотите удалить эту песню?",
                                       QMessageBox.Yes | QMessageBox.No)
            if question == QMessageBox.Yes:
                connection = sqlite3.connect(DB)
                cur = connection.cursor()
                cur.execute(f"""DELETE FROM music WHERE Исполнитель LIKE '{self.comboBoxDel1.currentText()}'
                                AND Песня LIKE '{self.comboBoxDel2.currentText()}'""")
                connection.commit()

                self.comboBoxDel1.clear()
                self.comboBoxDel2.clear()
                self.comboBoxGet1.clear()
                self.comboBoxGet2.clear()
                self.comboBoxGet3.clear()
                result = cur.execute("""SELECT DISTINCT Исполнитель FROM music""").fetchall()
                for elem in result:
                    self.comboBoxGet1.addItem(elem[0])
                result = cur.execute("""SELECT DISTINCT Альбом FROM music""").fetchall()
                for elem in result:
                    if elem[0] != None:
                        self.comboBoxGet2.addItem(elem[0])
                result = cur.execute("""SELECT DISTINCT Жанр FROM music""").fetchall()
                for elem in result:
                    if elem[0] != None:
                        self.comboBoxGet3.addItem(elem[0])
                result = cur.execute("""SELECT DISTINCT Исполнитель FROM music""").fetchall()
                for elem in result:
                    if elem[0] != None:
                        self.comboBoxDel1.addItem(elem[0])
                result = cur.execute(
                    f"""SELECT Песня FROM music WHERE Исполнитель LIKE '{self.comboBoxDel1.currentText()}'
                                         ORDER BY Оценка DESC""").fetchall()
                for elem in result:
                    if elem[0] != None:
                        self.comboBoxDel2.addItem(elem[0])

                messege = QMessageBox()
                messege.setWindowTitle("Успех")
                messege.setText("Песня успешно удалена")
                messege.setStandardButtons(QMessageBox.Ok)
                messege.exec_()

        else:
            error = QMessageBox()
            error.setWindowTitle("Ошибка")
            error.setText("Не выбрана песня")
            error.setIcon(QMessageBox.Warning)
            error.setStandardButtons(QMessageBox.Ok)
            error.exec_()

    def Song_Add(self):
        songData1 = self.add1_lineEdit.text()
        songData2 = self.add2_lineEdit.text()
        songData3 = self.add3_spinBox.value()
        songData4 = self.add4_lineEdit.text()
        songData5 = self.add5_comboBox.currentText()

        if len(str(songData3)) == 1 and songData3 != 0:
            songData3 = "0" + str(songData3)

        if songData4 == "":
            songData4 = "NULL"
        else:
            songData4 = "'" + songData4 + "'"

        if songData5 == "-":
            songData5 = "NULL"
        else:
            songData5 = "'" + songData5 + "'"

        if songData1 == "" or songData2 == "":
            error = QMessageBox()
            error.setWindowTitle("Ошибка")
            error.setText("Заполните все обязательные поля")
            error.setIcon(QMessageBox.Warning)
            error.setStandardButtons(QMessageBox.Ok)
            error.exec_()
        else:
            connection = sqlite3.connect(DB)
            cur = connection.cursor()
            result = cur.execute("""SELECT Исполнитель, Песня FROM music""").fetchall()
            Flag = True
            for elem in result:
                if songData1 == elem[0] and songData2 == elem[1]:
                    Flag = False
            if Flag:
                cur.execute(f"""INSERT INTO music VALUES('{songData1}', '{songData2}', '{songData3}', {songData4},
                                {songData5})""")
                connection.commit()

                self.add1_lineEdit.setText("")
                self.add2_lineEdit.setText("")
                self.add4_lineEdit.setText("")
                self.add3_spinBox.setValue(0)
                self.add5_comboBox.setCurrentIndex(0)

                self.comboBoxDel1.clear()
                self.comboBoxDel2.clear()
                self.comboBoxGet1.clear()
                self.comboBoxGet2.clear()
                self.comboBoxGet3.clear()
                result = cur.execute("""SELECT DISTINCT Исполнитель FROM music""").fetchall()
                for elem in result:
                    self.comboBoxGet1.addItem(elem[0])
                result = cur.execute("""SELECT DISTINCT Альбом FROM music""").fetchall()
                for elem in result:
                    if elem[0] != None:
                        self.comboBoxGet2.addItem(elem[0])
                result = cur.execute("""SELECT DISTINCT Жанр FROM music""").fetchall()
                for elem in result:
                    if elem[0] != None:
                        self.comboBoxGet3.addItem(elem[0])
                result = cur.execute("""SELECT DISTINCT Исполнитель FROM music""").fetchall()
                for elem in result:
                    if elem[0] != None:
                        self.comboBoxDel1.addItem(elem[0])
                result = cur.execute(
                    f"""SELECT Песня FROM music WHERE Исполнитель LIKE '{self.comboBoxDel1.currentText()}'
                                         ORDER BY Оценка DESC""").fetchall()
                for elem in result:
                    if elem[0] != None:
                        self.comboBoxDel2.addItem(elem[0])

                messege = QMessageBox()
                messege.setWindowTitle("Успех")
                messege.setText("Песня успешно добавлена")
                messege.setStandardButtons(QMessageBox.Ok)
                messege.exec_()

            else:
                error = QMessageBox()
                error.setWindowTitle("Ошибка")
                error.setText("Вы уже добавляли песню данного исполнителя с таким названием")
                error.setIcon(QMessageBox.Warning)
                error.setStandardButtons(QMessageBox.Ok)
                error.exec_()


if __name__ == '__main__':
    app = QApplication(sys.argv)
    ex = MyWidget()
    ex.show()
    sys.exit(app.exec_())
